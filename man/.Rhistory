remove.packages('BBayes')
require(BBayes)
data(goalstudy)
goalstudy$bid <- as.integer(goalstudy$bid + 0.5)
app_1a<-HBANOVA.Poisson(bid~1, ~goalprogress*varmeans,  goalstudy, goalstudy$id, burnin = 5000, sample = 1000, thin = 20)
summary(app_1a)
conv.diag(app_1a)
trace.plot(app_1a)
goalstudy$logbid <- log(goalstudy$bid + 1)
app_1 <- HBANOVA.Normal(logbid~1, ~goalprogress*varmeans,  goalstudy, goalstudy$id, burnin = 5000, sample = 1000, thin = 20)
conv.diag(app_1)
app_1 <- HBANOVA.Normal(logbid~1, ~goalprogress*varmeans,  goalstudy, goalstudy$id, burnin = 5000, sample = 1000, thin = 20)
conv.diag(app_1)
app_1 <- HBANOVA.Normal(logbid~1, ~goalprogress*varmeans,  goalstudy, goalstudy$id, burnin = 5000, sample = 1000, thin = 20)
conv.diag(app_1)
trace.plot(app_1)
summary(app_1)
table.means(app_1)
head(goalstudy)
# predict the mean for the 3rd subject(id == 3)
predict(app_1, goalstudy[3,])
# predict the mean corresponding to goalprogress:1 and varmeans:2
predict(app_1, c(0,0,1,2,0,0))
predict(app_1, goalstudy)
predict(app_1a, goalstudy[3,])
data(goalstudy)
app_2 <- HBANOVA.ordMultinomial (perceivedsim~1, ~goalprogress*varmeans,  goalstudy, goalstudy$id, burnin = 3000, sample = 1000, thin = 5)
summary(app_2)
predict(app_2,goalstudy[3,])
predict(app_2,goalstudy[1:3,])
predict(app_2,goalstudy[1:2,])
install.packages('runjags')
require(BANOVA)
install.packages('BANOVA')
?BANOVA
require(BANOVA)
data('goalstudy')
head(goalstudy)
sol <- lm(perceiedsim ~ goalprogress, data =  goalstudy)
sol <- lm(perceivedsim ~ goalprogress, data =  goalstudy)
summary(sol)
?BANOVA
?colorad
y1 = c(18.2, 20.1, 17.6, 16.8, 18.8, 19.7, 19.1)
y2 = c(17.4, 18.7, 19.1, 16.4, 15.9, 18.4, 17.7)
y3 = c(15.2, 18.8, 17.7, 16.5, 15.9, 17.1, 16.7)
y = c(y1, y2, y3)
n = rep(7, 3)
group = rep(1:3, n)
data = data.frame(y = y, group = factor(group))
fit = lm(y ~ group, data)
summary(fit)
anova(fit)
str(fit)
options(contrasts = rep("contr.sum", 2))
fit = lm(y ~ group, data)
anova(fit)
summary(fit)
fit$effects
fit$model
fit$coefficients
fit$coefficients[2,3]
fit$coefficients[c(2,3)]
sum(fit$coefficients[c(2,3)]^2)*7
sum(fit$coefficients[c(2,3)]^2)*7 + 7*(sum(fit$coefficients[c(2,3)]))^2
data(goalstudy)
fit_goal = lm((perceivedsim ~ goalprogress*varmeans, data =  goalstudy)
fit_goal = lm((perceivedsim ~ goalprogress*varmeans, data = goalstudy)
fit_goal = lm(perceivedsim ~ goalprogress*varmeans, data = goalstudy)
summary(fit_goal)
fit_goal = lm(bid ~ goalprogress*varmeans, data = goalstudy)
summary(fit_goal)
anova(fit_goal)
goalstudy[goalstudy$varmeans == 1 & goalstudy$goalprogress == 1,]
nrow(goalstudy[goalstudy$varmeans == 1 & goalstudy$goalprogress == 1,])
27*1.05920^2
?anova
anova
method(anova)
methods(anova)
anova.lm
fit_goal$rank
fit_goal$effects
0L
temp_aov <- function (object, ...)
{
if (length(list(object, ...)) > 1L)
return(anova.lmlist(object, ...))
if (!inherits(object, "lm"))
warning("calling anova.lm(<fake-lm-object>) ...")
w <- object$weights
ssr <- sum(if (is.null(w)) object$residuals^2 else w * object$residuals^2)
mss <- sum(if (is.null(w)) object$fitted.values^2 else w *
object$fitted.values^2)
if (ssr < 1e-10 * mss)
warning("ANOVA F-tests on an essentially perfect fit are unreliable")
dfr <- df.residual(object)
p <- object$rank
if (p > 0L) {
p1 <- 1L:p
comp <- object$effects[p1]
asgn <- object$assign[qr.lm(object)$pivot][p1]
nmeffects <- c("(Intercept)", attr(object$terms, "term.labels"))
tlabels <- nmeffects[1 + unique(asgn)]
ss <- c(unlist(lapply(split(comp^2, asgn), sum)), ssr)
df <- c(unlist(lapply(split(asgn, asgn), length)), dfr)
}
else {
ss <- ssr
df <- dfr
tlabels <- character()
}
ms <- ss/df
f <- ms/(ssr/dfr)
P <- pf(f, df, dfr, lower.tail = FALSE)
table <- data.frame(df, ss, ms, f, P)
table[length(P), 4:5] <- NA
dimnames(table) <- list(c(tlabels, "Residuals"), c("Df",
"Sum Sq", "Mean Sq", "F value", "Pr(>F)"))
if (attr(object$terms, "intercept"))
table <- table[-1, ]
structure(table, heading = c("Analysis of Variance Table\n",
paste("Response:", deparse(formula(object)[[2L]]))),
class = c("anova", "data.frame"))
}
temp_aov(fit_goal)
?qr
qr.lm
qr
methods(qr)
qr.lm
base:::qr.lm
getAnywhere(qr.lm)
fit_goal$qr
1L:4
1:4
l
lm
lm.fit
C_Cdqrls
summary(fit)
y1 = c(18.2, 20.1, 17.6, 16.8, 18.8, 19.7, 19.1)
y2 = c(17.4, 18.7, 19.1, 16.4, 15.9, 18.4, 17.7)
y3 = c(15.2, 18.8, 17.7, 16.5, 15.9, 17.1, 16.7)
y = c(y1, y2, y3)
n = rep(7, 3)
group = rep(1:3, n)
data = data.frame(y = y, group = factor(group))
options(contrasts = rep("contr.sum", 2))
fit = lm(y ~ group, data)
anova(fit)
fit$coefficients
fit$model$group
fit$model
str(fit)
model.matrix(y ~ group, data)
model.matrix(y ~ group, data)%*%fit$coefficients
rep(1:3, c(2,3))
rep(1:3, c(2,2))
rep(1:3, c(2,2,2))
groupA = rep(1:3, n)
groupB = rep(1:2, 16)
data = data.frame(y = y, groupA = factor(groupA), groupB=factor(groupB))
y1 = c(18.2, 20.1, 17.6, 16.8, 18.8, 19.7, 19.1, 20.2)
y2 = c(17.4, 18.7, 19.1, 16.4, 15.9, 18.4, 17.7, 16.1)
y3 = c(15.2, 18.8, 17.7, 16.5, 15.9, 17.1, 16.7, 15.3)
y = c(y1, y2, y3)
n = rep(8, 3)
groupA = rep(1:3, n)
groupB = rep(1:2, 16)
data = data.frame(y = y, groupA = factor(groupA), groupB=factor(groupB))
groupA = rep(1:3, n)
groupB = rep(1:2, 12)
data = data.frame(y = y, groupA = factor(groupA), groupB=factor(groupB))
options(contrasts = rep("contr.sum", 2))
fit = lm(y ~ group, data)
fit = lm(y ~ groupA + groupB, data)
anova(fit)
y1 = c(18.2, 20.1, 17.6, 16.8, 18.8, 19.7, 19.1, 20.2)
y2 = c(17.4, 18.7, 19.1, 16.4, 15.9, 12.4, 11.7, 10.1)
y3 = c(15.2, 13.8, 11.7, 16.5, 15.9, 12.1, 16.7, 15.3)
y = c(y1, y2, y3)
n = rep(8, 3)
groupA = rep(1:3, n)
groupB = rep(1:2, 12)
data = data.frame(y = y, groupA = factor(groupA), groupB=factor(groupB))
options(contrasts = rep("contr.sum", 2))
fit = lm(y ~ groupA + groupB, data)
anova(fit)
y1 = c(18.2, 20.1, 17.6, 16.8, 18.8, 19.7, 19.1, 20.2)
y2 = c(17.4, 18.7, 19.1, 16.4, 13.9, 12.4, 11.7, 10.1)
y3 = c(15.2, 13.8, 11.7, 10.5, 15.9, 12.1, 10.7, 11.3)
y = c(y1, y2, y3)
n = rep(8, 3)
groupA = rep(1:3, n)
groupB = rep(1:2, 12)
data = data.frame(y = y, groupA = factor(groupA), groupB=factor(groupB))
options(contrasts = rep("contr.sum", 2))
fit = lm(y ~ groupA + groupB, data)
anova(fit)
model.matrix(fit)
y1 = c(18.2, 20.1, 17.6, 16.8, 18.8, 19.7, 19.1, 20.2)
y2 = c(17.4, 18.7, 19.1, 16.4, 13.9, 12.4, 11.7, 10.1)
y3 = c(15.2, 13.8, 11.7, 10.5, 15.9, 12.1, 10.7, 11.3)
y = c(y1, y2, y3)
n = rep(8, 3)
groupA = rep(1:3, n)
groupB = rep(1:2, c(12,12))
data = data.frame(y = y, groupA = factor(groupA), groupB=factor(groupB))
options(contrasts = rep("contr.sum", 2))
fit = lm(y ~ groupA + groupB, data)
anova(fit)
model.matrix(fit)
groupA = rep(1:3, n)
groupB = rep(rep(1:2, c(4,4)),3)
data = data.frame(y = y, groupA = factor(groupA), groupB=factor(groupB))
options(contrasts = rep("contr.sum", 2))
fit = lm(y ~ groupA + groupB, data)
anova(fit)
model.matrix(fit)
summary(fit)
c(1,2)*c(2,3)
array(c(1,2,3,4), dim = c(2,2))*c(2,3)
array(c(1,2,3,4), dim = c(2,2))
c(2,3)*array(c(1,2,3,4), dim = c(2,2))
array(c(1,2,3,4), dim = c(2,2))*t(c(2,3))
model.matrix(fit)%*%diag(fit$coefficients)
eff <- model.matrix(fit)%*%diag(fit$coefficients)
var(eff[,2] + eff[,3])
anova(fit)
sum((eff[,2] + eff[,3])^2)
fit$effects
effects(fit)
class(fit$effects)
dim(fit$effects)
length(fit$effects)
sum(eff[,4])^2)
sum((eff[,4])^2)
sum((eff[,2])^2)
sum(c(-12.3250000 ,-1.7753521)^2)
sum(eff[,2])
drop1
methods(drop1)
getAnywhere(drop1.lm)
data = data.frame(y = y, groupA = factor(groupA), groupB=factor(groupB))
options(contrasts = rep("contr.sum", 2))
fit_A = lm(y ~ groupA, data)
fit_B = lm(y ~ groupB, data)
fit = lm(y ~ groupA + groupB, data)
summary(fit_A)
summary(fit_B)
summary(fit)
table(goalstudy)
require(BANOVA)
data(goalstudy)
table(goalstudy)
goalstudy
summary(goalstudylstudy)
summary(goalstudy)
?reshape
>aov
?aov
data <- read.table(("http://www.uvm.edu/~dhowell/methods8/DataFiles//Tab14-3.dat"), header = TRUE)
# data$subject <- factor(1:9)   subject is already a variable in the data set.
datLong <- reshape(data = data, varying = 2:6, v.names = "outcome", timevar
= "time", idvar = "subject", ids = 1:9, direction = "long")
datLong
time <- factor(time)
Subject <- factor(Subject)
attach(datLong)
time <- factor(time)
Subject <- factor(Subject)
options(contrasts=c("contr.sum","contr.poly"))
modelAOV <- aov(outcome~factor(time)+Error(factor(Subject)), data = datLong)
print(summary(modelAOV))
setwd("C:/Users/CDONG/Google Drive/Dropbox/Rweb/NewCode/codeForPackage")
setwd("C:/Users/CDONG/Google Drive/Dropbox/Rweb/NewCode/codeForPackage/BANOVA_v8/man")
load("C:/Users/CDONG/Google Drive/Dropbox/Rweb/NewCode/codeForPackage/BANOVA_v8/data/goalstudy.rdata")
head(goalstudy)
colnames(goalstudy) <- c('id', 'perceivedsim','progress', 'prodvar', 'bid')
head(goalstudy)
save(goalstudy, file = "C:/Users/CDONG/Google Drive/Dropbox/Rweb/NewCode/codeForPackage/BANOVA_v8/data/goalstudy.rdata")
load("C:/Users/CDONG/Google Drive/Dropbox/Rweb/NewCode/codeForPackage/BANOVA_v8/data/goalstudy.rdata")
head(goalstudy)
out1 <- BANOVA.Poisson(bid~1, ~progress*prodvar, goalstudy, goalstudy$id, burnin = 5000, sample = 1000, thin = 20)
sourceDir <- function (path, pattern = "\\.[rR]$", env = NULL, chdir = TRUE)
{
files <- sort(dir(path, pattern, full.names = TRUE))
lapply(files, source, chdir = chdir)
}
require(runjags)
require(coda)
sourceDir("/Users/CDONG/Google Drive/Dropbox/Rweb/NewCode/codeForPackage/BANOVA_v8/R")
out1 <- BANOVA.Poisson(bid~1, ~progress*prodvar, goalstudy, goalstudy$id, burnin = 5000, sample = 1000, thin = 20)
conv.diag(out1)
trace.plot(out1)
summary(out1)
table.predictions(out1)
cat(out1$JAGSmodel)
sourceDir
sourceDir("/Users/CDONG/Google Drive/Dropbox/Rweb/NewCode/codeForPackage/BANOVA_v8/R")
out1 <- BANOVA.Poisson(bid~1, ~progress*prodvar, goalstudy, goalstudy$id, burnin = 5000, sample = 1000, thin = 20)     # runs the analysis
conv.diag(out1)                                                                                    # convergence diagnostics
trace.plot(out1)                                                                # iteration plots and posterior densities
summary(out1)                                            # sum of squares, effect sizes, parameter estimates, standard deviations, credible intervals, p-values
table.predictions(out1)                             # tables with predicted values for combinations of factors
load("/Users/CDONG/Google Drive/Dropbox/Rweb/NewCode/codeForPackage/BANOVA_v8/data/condstudy.rdata")
out1 <- BANOVA.Poisson(bid~1, ~progress*prodvar, goalstudy, goalstudy$id, burnin = 5000, sample = 1000, thin = 20)     # runs the analysis
out2 <- BANOVA.Normal(att~cond+pict, ~type, condstudy, condstudy$id, burnin = 5000, sample = 1000, thin = 20)        # runs the analysis
conv.diag(out2)                                                                                        # convergence diagnostics
summary(out2)                                  # ss, effect sizes, mean, SD and CI of parameters, p-values
table.predictions(out2)                             # tables with predicted values for combinations of factors
BANOVA.floodlight(out2, var_factor = 'type', var_numeric = 'pict')                # floodlight for pict
sourceDir("/Users/CDONG/Google Drive/Dropbox/Rweb/NewCode/codeForPackage/BANOVA_v8/R")
BANOVA.floodlight(out2, var_factor = 'type', var_numeric = 'pict')                # floodlight for pict
data2 <- read.csv("/Users/CDONG/Google Drive/Dropbox/Rweb/JCR/SuppMaterials/TwobyCont.txt",skip = 1)
data2$id <- 1:nrow(data2)
sol_bnorm <- BANOVA.Normal(Candies~1, ~BMI * LargeQuantModel, id = data2$id, data = data2, burnin = 10000, sample = 5000, thin = 10)
res_f <- BANOVA.floodlight(sol_bnorm, var_factor = 'LargeQuantModel', var_numeric = 'BMI')
res_f
BANOVA.floodlight(out2, var_factor = 'type', var_numeric = 'pict')                # floodlight for pict
cat(out2$JAGSmodel)                                                                                     # prints the JAGS model
out3 <- BANOVA.Normal(pict~cond, ~type, condstudy, condstudy$id, burnin = 5000, sample = 1000, thin = 20)    #analysis for mediator
conv.diag(out3)                                                                      # convergence diagnostics mediator
summary(out3)                                     # ss, effect sizes, mean, SD and CI, p-values for mediator
BANOVA.mediation(out2, out3, xvar='cond', mediator='pict')            # (moderated) mediation
R> out4 <- BANOVA.Normal(att~cond, ~type, condstudy, condstudy$id, burnin = 5000, sample = 1000, thin = 20)        # runs the analysis
out4 <- BANOVA.Normal(att~cond, ~type, condstudy, condstudy$id, burnin = 5000, sample = 1000, thin = 20)        # runs the analysis
summary(out4)
